// Generated by view binder compiler. Do not edit!
package com.over3.listmaker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.over3.listmaker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final ImageButton btnDeleteEntery;

  @NonNull
  public final CheckBox checkBox;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v21/</li>
   *   <li>layout-v23/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guideline27;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v21/</li>
   *   <li>layout-v23/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guideline30;

  @NonNull
  public final TextView imePrikaz;

  private ListItemBinding(@NonNull View rootView, @NonNull ImageButton btnDeleteEntery,
      @NonNull CheckBox checkBox, @Nullable Guideline guideline27, @Nullable Guideline guideline30,
      @NonNull TextView imePrikaz) {
    this.rootView = rootView;
    this.btnDeleteEntery = btnDeleteEntery;
    this.checkBox = checkBox;
    this.guideline27 = guideline27;
    this.guideline30 = guideline30;
    this.imePrikaz = imePrikaz;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteEntery;
      ImageButton btnDeleteEntery = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteEntery == null) {
        break missingId;
      }

      id = R.id.checkBox;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.guideline27;
      Guideline guideline27 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.guideline30;
      Guideline guideline30 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.ime_prikaz;
      TextView imePrikaz = ViewBindings.findChildViewById(rootView, id);
      if (imePrikaz == null) {
        break missingId;
      }

      return new ListItemBinding(rootView, btnDeleteEntery, checkBox, guideline27, guideline30,
          imePrikaz);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
